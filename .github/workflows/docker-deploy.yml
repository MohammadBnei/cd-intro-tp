name: Docker Image CI

on:
  push:
    branches: ["main", dev]
    paths:
        - "api/**"
        - ".github/workflows/docker-deploy.yml"
    tags:        
      - '*'  
  pull_request:
    branches: ["main"]
  
  workflow_dispatch:

env:
  workdir: api
  platforms: "linux/amd64, linux/arm64/v8"

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - uses: pnpm/action-setup@v2.0.1
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7

      - name: Install dependencies
        run: pnpm install

      - name: Get pnpm store directory
        id: pnpm-cache
        run: |
          echo "::set-output name=pnpm_cache_dir::$(pnpm store path)"

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.pnpm_cache_dir }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Unit Tests
        run: pnpm test

  deploy:
    runs-on: ubuntu-latest
    needs: build

    defaults:
      run:
        working-directory: api

    steps:
      - uses: actions/checkout@v2

      - name: Use Node.js 16
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Set api version
        id: api-version
        run: |
          node -e "console.log(require('./package.json').version);"
          VERSION=$(node -e "console.log(require('./package.json').version);")
          echo "::set-output name=API_VERSION::$VERSION"

      - run: echo ${{ steps.api-version.outputs.API_VERSION }}

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: mohammaddocker
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        
      - name: Set up QEMU dependency
        uses: docker/setup-qemu-action@v2

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-


      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          context: ./${{ env.workdir }}/
          file: ./${{ env.workdir }}/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: ${{ github.event_name != 'pull_request' }}
          platforms: ${{ env.platforms }}
          tags: |
            mohammaddocker/joke-api:${{ steps.api-version.outputs.API_VERSION }} 
            mohammaddocker/joke-api:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
