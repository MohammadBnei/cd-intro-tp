version: 2.1

orbs:
  heroku: circleci/heroku@1.2.6

commands:
  deploy-command:
    parameters:
      BRANCH:
        type: string
      HEROKU_APP_NAME:
        type: string
    steps:
      - run: heroku config:set YARN_PRODUCTION=false -a <<parameters.HEROKU_APP_NAME>>
      - heroku/deploy-via-git:
          app-name: <<parameters.HEROKU_APP_NAME>>
          branch: <<parameters.BRANCH>>

jobs:
  build: # this can be any name you choose
    docker:
      - image: node:16
    resource_class: large
    parallelism: 10

    steps:
      - checkout
      - restore_cache:
          name: Restore pnpm Package Cache
          keys:
            - pnpm-packages-{{ checksum "api/pnpm-lock.yaml" }}
      - run:
          name: Install pnpm package manager
          command: |
            curl -L https://pnpm.js.org/pnpm.js | node - add --global pnpm@7
      - run:
          name: Install Dependencies
          command: |
            cd api
            pnpm install
      - save_cache:
          name: Save pnpm Package Cache
          key: pnpm-packages-{{ checksum "api/pnpm-lock.yaml" }}
          paths:
            - api/node_modules
      - persist_to_workspace:
          paths:
            - "."
          root: api
      

  test: # this can be any name you choose
    docker:
      - image: node:16
    resource_class: large
    parallelism: 10

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: ~/project/

      - run:
          name: Install pnpm package manager
          command: |
            curl -L https://pnpm.js.org/pnpm.js | node - add --global pnpm@7

      - run:
          name: test app
          command: |
            pnpm test

  deploy:
    executor: heroku/default
    steps:
      - checkout

      - run:
          name: modify folder structure
          command: |
            mv api/* .
            mv api/.* .

      - heroku/install

      - when:
          condition:
            equal: [circleci, << pipeline.git.branch >>]
          steps:
            - deploy-command:
                HEROKU_APP_NAME: joke-app-cd
                BRANCH: circleci

workflows:
    build:
      jobs:
        - build:
            filters:
              branches:
                only:
                  - circleci
        - test:
            requires:
              - build
        - deploy:
            requires:
              - test